Q1:

SET SERVEROUTPUT ON;
DECLARE
X INTEGER;
Y INTEGER;
Z INTEGER;
BEGIN
X := &X;
Y := &Y;
Z := X+Y;
DBMS_OUTPUT.PUT_LINE('SUM IS '||Z);
END;
/


Q2:

SET SERVEROUTPUT ON;
DECLARE
LOWER INTEGER;
UPPER INTEGER;
SUM1 INTEGER := 0;
BEGIN
LOWER := &LOWER;
UPER := &UPPER;
LOOP
SUM1 := SUM1+LOWER;
LOWER := LOWER+1;
EXIT WHEN LOWER>UPPER;
END LOOP;
DBMS_OUTPUT.PUT_LINE('SUM IS '||SUM1);
END;
/


Q3:

SET SERVEROUTPUT ON;
DECLARE
ena EMP.ename%TYPE;
da EMP.hiredate%TYPE;
dep dept.dname%TYPE;
depno EMP.deptno%TYPE;
eno EMP.empno%TYPE;

BEGIN
eno := &ENO;
SELECT ename into ena FROM emp WHERE empno = eno;
SELECT hiredate into da FROM emp WHERE empno = eno;
SELECT deptno into depno FROM emp WHERE empno = eno;
SELECT dname into dep FROM dept WHERE deptno = depno;
DBMS_OUTPUT.PUT_LINE(ena || da || dep );

EXCEPTION
   WHEN NO_DATA_FOUND
   THEN dbms_output.put_line('NO DATA FOUND');

END;
/


Q4:

SET SERVEROUTPUT ON;
DECLARE 
NUM INTEGER;
REM INTEGER := 0;
REV INTEGER := 0;
TEMP INTEGER;

BEGIN
NUM := &NUM;
TEMP := NUM;
WHILE NUM!=0 LOOP
REM := MOD(NUM,10);
NUM := NUM / 10;
REV := REM + REV*10;
END LOOP;

IF REV=TEMP THEN
DBMS_OUTPUT.PUT_LINE('PALLINDROME');
ELSE
DBMS_OUTPUT.PUT_LINE('NOT PALLINDROME');
END IF;

END;
/


Q5:

DECLARE
var1 INTEGER := 0;

BEGIN
for i in 1..100
LOOP
var1 := var1 + i;
END LOOP;

DBMS_OUTPUT.PUT_LINE('Sum of first 100 number is ' || var1);
END;
/

Q6:

SET SERVEROUTPUT ON;
DECLARE
A INTEGER;
BEGIN 
A := &A;
IF A > 0 THEN
DBMS_OUTPUT.PUT_LINE('POSITIVE');
ELSIF A < 0 THEN
DBMS_OUTPUT.PUT_LINE('NEGATIVE');
ELSE
DBMS_OUTPUT.PUT_LINE('ZERO');
END IF;
END;
/

Q7:

SET SERVEROUTPUT ON;
DECLARE 
X NUMBER := 10;

BEGIN
LOOP
X := X+25;
DBMS_OUTPUT.PUT_LINE(TO_CHAR(X));
EXIT WHEN X=260;
END LOOP;

DBMS_OUTPUT.PUT_LINE(TO_CHAR(X));

END;
/

Q8:

SET SERVEROUTPUT ON;
DECLARE 
X NUMBER := 10;

BEGIN
WHILE X != 260 LOOP
X := X+25;
DBMS_OUTPUT.PUT_LINE(TO_CHAR(X));
END LOOP;

DBMS_OUTPUT.PUT_LINE(TO_CHAR(X));

END;
/

Q9:

SET SERVEROUTPUT ON;
DECLARE
ENA EMP.ENAME%TYPE;
DA EMP.HIREDATE%TYPE;
DEPN DEPT.DNAME%TYPE;
DEPO EMP.DEPTNO%TYPE;
ENO EMP.EMPNO%TYPE;
JO EMP.JOB%TYPE;
MG EMP.MGR%TYPE;
SA EMP.SAL%TYPE;
COM EMP.COMM%TYPE;
LOC DEPT.LOC%TYPE;
DEPO1 DEPT.DEPTNO%TYPE;
BEGIN
ENO := &ENO;
ENA := &ENA;
JO := &JO;
MG := &MG;
DA := &DA;
SA := &SA;
COM := &COM;
DEPO := &DEPO;

DEPN := &DEPN;
DEPO1 := &DEPO1;
LOC := &LOC;

INSERT INTO DEPT VALUES (DEPO1,DEPN,LOC);
INSERT INTO EMP VALUES (ENO,ENA,JO,MG,TO_CHAR(DA),SA,COM,DEPO);

END;
/
